---
name: Continuous Deployment

on:
  push:
    # Run workflow every time something is pushed to the main branch
    branches:
      - main
      - master

# Remember to set the following secrets in your repository's settings:
# https://github.com/your_username/itu-minitwit-ci/settings/secrets/actions
# DOCKER_USERNAME
# DOCKER_PASSWORD
# SSH_USER
# SSH_KEY
# SSH_HOST

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push minitwitimage
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile-minitwit
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/minitwitimage:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/minitwitimage:webbuildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/minitwitimage:webbuildcache,mode=max

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/do_ssh_key
          chmod 600 ~/.ssh/do_ssh_key
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
      
      - name: Upload remote_files to server
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          set -e
          if [ -z "$SSH_USER" ] || [ -z "$SSH_HOST" ]; then
            echo "SSH_USER/SSH_HOST not set (check repo Secrets or Environment)."; exit 1
          fi
          ssh -i ~/.ssh/do_ssh_key -o StrictHostKeyChecking=no "$SSH_USER@$SSH_HOST" "mkdir -p /minitwit"
          rsync -az --delete -e "ssh -i ~/.ssh/do_ssh_key -o StrictHostKeyChecking=no" \
            remote_files/ "$SSH_USER@$SSH_HOST:/minitwit/"
      
      - name: Deploy to server
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          ssh -i ~/.ssh/do_ssh_key -o StrictHostKeyChecking=no "$SSH_USER@$SSH_HOST" \
            "chmod +x /minitwit/deploy.sh && DOCKER_USERNAME='$DOCKER_USERNAME' DOCKER_PASSWORD='$DOCKER_PASSWORD' /minitwit/deploy.sh"
